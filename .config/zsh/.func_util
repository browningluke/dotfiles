# Convert all files in current dir to JPEG XL (requires libjxl & parallel)
jpg2jxl() {
    # Prepare ENV & directories
    PLLDIR="/tmp/pll_$(date +%s)"
    JXLPATH="jxl"
    mkdir jxl

    # Run conversion
    parallel --results $PLLDIR "cjxl --lossless_jpeg=1 {} $JXLPATH/{.}.jxl" ::: *.jpeg(N) *.jpg(N)

    # Find all failed
    grep -nrli failed $PLLDIR | cut -d "/" -f 5 | tee failed.txt
    FAILEDNUM="$(cat failed.txt | wc -l)"
    echo "Wrote $FAILEDNUM failed items to failed.txt"

    # Calculate size reduction
    OLDSIZE="$(du -kc *.jpg(N) *.jpeg(N) | grep total$ | cut -f1)"
    NEWSIZE="$(du -kc $JXLPATH/*.jxl | grep total$ | cut -f1)"
    SIZEREDU=$(awk -v t1="$OLDSIZE" -v t2="$NEWSIZE" 'BEGIN{printf "%.0f", (t2-t1)/t1 * 100}')

    OLDSIZEH=$(echo "${OLDSIZE}K" | numfmt --from=iec --to=iec-i --suffix=B --format='%.2f')
    NEWSIZEH=$(echo "${NEWSIZE}K" | numfmt --from=iec --to=iec-i --suffix=B --format='%.2f')

    echo "Size changed by ${SIZEREDU}% (Old: $OLDSIZEH; New: $NEWSIZEH)"

    unset PLLDIR FAILEDNUM
    unset JXLPATH
    unset NEWSIZE OLDSIZE SIZEREDU OLDSIZEH NEWSIZEH
}

# Move all files in CWD with pattern `YYYYMMDD.*` into directory structure `YYYY/MM/DD/`
mvdate() {
	regex="([0-9]{4})([0-9]{2})([0-9]{2}).*"
	for f in ./*
	do
	    if [[ $f =~ $regex ]]
	    then
	        mkdir -p "$match[1]/$match[2]/$match[3]"
	        mv "$f" "$match[1]/$match[2]/$match[3]"
	    fi
	done
	unset regex
}

